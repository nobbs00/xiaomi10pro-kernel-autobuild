name: 构建Kneip内核

on:
  watch:
    types: [started]

jobs:
  KneipKernel:
    runs-on: ubuntu-latest
    steps:
      - name: 环境准备
        run: |
          sudo apt update -y
          sudo apt-get install -y zipalign openssl ccache bc bash git-core gnupg build-essential zip curl make automake autogen autoconf autotools-dev libtool shtool python m4 gcc libtool zlib1g-dev flex libssl-dev gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi python2

      - name: 拉取源代码和工具链
        run: |
          git clone --depth=1 https://oauth2:${{ secrets.TOKEN }}@github.com/zclkkk/kernel_xiaomi_sm8250.git
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang-tools
          mv clang-tools/clang-* clang
          rm -rf clang-tools
          git clone --depth=1 --branch main https://github.com/zclkkk/AnyKernel3.git

      - name: 设置环境变量
        run: |
          CLANG_DIR=../clang
          export KBUILD_BUILD_USER="zclkkk"
          export KBUILD_BUILD_HOST="Workspace"
          export args="O=../out ARCH=arm64 CC=${CLANG_DIR}/bin/clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- LD=${CLANG_DIR}/bin/ld.lld"

      - name: 构建内核
        run: |
          cd kernel_xiaomi_sm8250
          make ${args} cmi_defconfig
          make -j$(nproc --all) ${args}

      - name: 上传内核
        run: |
          cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
          cp out/arch/arm64/boot/dtbo.img AnyKernel3/
          cd AnyKernel3
          VERSION=$(grep "CONFIG_LOCALVERSION=" ../kernel_xiaomi_sm8250/arch/arm64/configs/alioth_defconfig | sed -r 's/.*"(.+)".*/\1/' | sed 's/^.//')
          7z a -mx9 ${VERSION}.zip *
          zipalign -v 4 ${VERSION}.zip ../${VERSION}_cmi.zip
          cd ..
          curl -sL https://git.io/file-transfer | bash -s beta
          ./transfer wet ${VERSION}_cmi.zip
